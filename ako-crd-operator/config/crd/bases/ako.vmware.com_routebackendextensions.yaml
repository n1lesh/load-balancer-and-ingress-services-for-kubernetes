---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.2
  name: routebackendextensions.ako.vmware.com
spec:
  group: ako.vmware.com
  names:
    kind: RouteBackendExtension
    listKind: RouteBackendExtensionList
    plural: routebackendextensions
    singular: routebackendextension
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: RouteBackendExtension is the Schema for the routebackendextensions
          API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            properties:
              healthMonitor:
                description: Represents health monitor objects
                items:
                  description: BackendHealthMonitor defines the desired state of BackendHealthMontior.
                  properties:
                    kind:
                      description: Defines the type of HealthMonitor object
                      enum:
                      - AVIREF
                      type: string
                    name:
                      description: Defines the name of HealthMonitor object. HealthMonitor
                        object should be the same namespace as that of RouteBackendExtension
                        object
                      type: string
                  required:
                  - kind
                  - name
                  type: object
                type: array
              lbAlgorithm:
                default: LB_ALGORITHM_LEAST_CONNECTIONS
                description: Defines LB algorithm on Pool
                enum:
                - LB_ALGORITHM_LEAST_CONNECTIONS
                - LB_ALGORITHM_ROUND_ROBIN
                - LB_ALGORITHM_FASTEST_RESPONSE
                - LB_ALGORITHM_CONSISTENT_HASH
                - LB_ALGORITHM_LEAST_LOAD
                - LB_ALGORITHM_FEWEST_SERVERS
                - LB_ALGORITHM_RANDOM
                - LB_ALGORITHM_FEWEST_TASKS
                - LB_ALGORITHM_NEAREST_SERVER
                - LB_ALGORITHM_CORE_AFFINITY
                - LB_ALGORITHM_TOPOLOGY
                type: string
              lbAlgorithmConsistentHashHdr:
                description: |-
                  HTTP header name to be used for the hash key.
                  This field should be specified only when lbAlgorithm is LB_ALGORITHM_CONSISTENT_HASH and lbAlgorithmHash is LB_ALGORITHM_CONSISTENT_HASH_CUSTOM_HEADER.
                type: string
              lbAlgorithmHash:
                default: LB_ALGORITHM_CONSISTENT_HASH_SOURCE_IP_ADDRESS
                description: Criteria used as a key for determining the hash between
                  the client and server
                enum:
                - LB_ALGORITHM_CONSISTENT_HASH_SOURCE_IP_ADDRESS
                - LB_ALGORITHM_CONSISTENT_HASH_SOURCE_IP_ADDRESS_AND_PORT
                - LB_ALGORITHM_CONSISTENT_HASH_URI
                - LB_ALGORITHM_CONSISTENT_HASH_CUSTOM_HEADER
                - LB_ALGORITHM_CONSISTENT_HASH_CUSTOM_STRING
                - LB_ALGORITHM_CONSISTENT_HASH_CALLID
                type: string
            type: object
            x-kubernetes-validations:
            - message: lbAlgorithmHash must be set if and only if lbAlgorithm is LB_ALGORITHM_CONSISTENT_HASH
              rule: (self.lbAlgorithm == 'LB_ALGORITHM_CONSISTENT_HASH') == has(self.lbAlgorithmHash)
            - message: lbAlgorithmConsistentHashHdr must be set if and only if lbAlgorithmHash
                is LB_ALGORITHM_CONSISTENT_HASH_CUSTOM_HEADER
              rule: '!has(self.lbAlgorithmHash) || (self.lbAlgorithmHash == ''LB_ALGORITHM_CONSISTENT_HASH_CUSTOM_HEADER'')
                == has(self.lbAlgorithmConsistentHashHdr)'
          status:
            description: RouteBackendExtensionStatus defines the observed state of
              RouteBackendExtension.
            properties:
              conditions:
                description: Conditions is the list of conditions for the RouteBackendExtension
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              controller:
                description: |-
                  INSERT ADDITIONAL STATUS FIELD - define observed state of cluster
                  Field is populated by AKO CRD operator as ako-crd-operator
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
